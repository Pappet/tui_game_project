=============================================================================================================================================================================================

## ðŸ§­ NEXT STEP

  - **Role:** BUILDER
  - **Task:** Implementiere die Logik fÃ¼r "Load Game" und "Start New Game" im HauptmenÃ¼.
    1.  Modifiziere `tui_game/tui/screens/main_menu.py`: In der `on_button_pressed`-Methode, implementiere die Handler fÃ¼r `btn_load_game` und `btn_new_game`.
    2.  FÃ¼r `btn_load_game`: Rufe `self.app.controller.load_game()` auf.
    3.  FÃ¼r `btn_new_game`: Rufe eine (neu zu erstellende) Methode `self.app.controller.new_game()` auf (erstelle einen Platzhalter dafÃ¼r in `game_controller.py`, falls nÃ¶tig).
    4.  Nach beiden Aktionen (Load/New), wechsle zum `BaseScreen` mit `self.app.push_screen(BaseScreen())`.

-----

## ðŸ“Š PROJECT PROGRESS

Die Implementierung der Navigationslogik im HauptmenÃ¼ (`main_menu.py`) durch den BUILDER wurde Ã¼berprÃ¼ft und genehmigt. Die Anwendung kann nun zwischen den verschiedenen (Stub-)Bildschirmen wechseln. Der nÃ¤chste Schritt ist die Implementierung der Spielladen/-starten-FunktionalitÃ¤t, die Ã¼ber die Buttons im HauptmenÃ¼ ausgelÃ¶st wird.

-----

## ðŸ§± CONSOLIDATED PROJECT STATE

```json
{
  "version": "v0.6",
  "files": [
    {
      "path": "architecture.md",
      "status": "final",
      "last_agent": "DESIGN",
      "review_status": "approved",
      "issues": []
    },
    {
      "path": "tui_game/main.py",
      "status": "final",
      "last_agent": "BUILDER",
      "review_status": "approved",
      "issues": []
    },
    {
      "path": "tui_game/core/__init__.py",
      "status": "in_progress",
      "last_agent": "BUILDER",
      "review_status": "approved",
      "issues": []
    },
    {
      "path": "tui_game/core/game_controller.py",
      "status": "final",
      "last_agent": "BUILDER",
      "review_status": "approved",
      "issues": []
    },
    {
      "path": "tui_game/core/game_state.py",
      "status": "in_progress",
      "last_agent": "BUILDER",
      "review_status": "approved",
      "issues": []
    },
    {
      "path": "tui_game/tui/__init__.py",
      "status": "in_progress",
      "last_agent": "BUILDER",
      "review_status": "approved",
      "issues": []
    },
    {
      "path": "tui_game/tui/app.py",
      "status": "final",
      "last_agent": "BUILDER",
      "review_status": "approved",
      "issues": []
    },
    {
      "path": "tui_game/tui/screens/__init__.py",
      "status": "in_progress",
      "last_agent": "BUILDER",
      "review_status": "approved",
      "issues": []
    },
    {
      "path": "tui_game/tui/screens/base_screen.py",
      "status": "in_progress",
      "last_agent": "BUILDER",
      "review_status": "approved",
      "issues": []
    },
    {
      "path": "tui_game/tui/screens/battle_screen.py",
      "status": "in_progress",
      "last_agent": "BUILDER",
      "review_status": "approved",
      "issues": []
    },
    {
      "path": "tui_game/tui/screens/hero_screen.py",
      "status": "in_progress",
      "last_agent": "BUILDER",
      "review_status": "approved",
      "issues": []
    },
    {
      "path": "tui_game/tui/screens/main_menu.py",
      "status": "final",
      "last_agent": "BUILDER",
      "review_status": "approved",
      "issues": []
    },
    {
      "path": "tui_game/game_logic/__init__.py",
      "status": "in_progress",
      "last_agent": "BUILDER",
      "review_status": "approved",
      "issues": []
    },
    {
      "path": "tui_game/game_logic/base_manager.py",
      "status": "in_progress",
      "last_agent": "BUILDER",
      "review_status": "approved",
      "issues": []
    },
    {
      "path": "tui_game/game_logic/battle_system.py",
      "status": "in_progress",
      "last_agent": "BUILDER",
      "review_status": "approved",
      "issues": []
    },
    {
      "path": "tui_game/game_logic/hero_manager.py",
      "status": "in_progress",
      "last_agent": "BUILDER",
      "review_status": "approved",
      "issues": []
    },
    {
      "path": "tui_game/game_logic/item_manager.py",
      "status": "in_progress",
      "last_agent": "BUILDER",
      "review_status": "approved",
      "issues": []
    },
    {
      "path": "tui_game/data/items.json",
      "status": "in_progress",
      "last_agent": "BUILDER",
      "review_status": "approved",
      "issues": []
    },
    {
      "path": "tui_game/data/heroes.json",
      "status": "in_progress",
      "last_agent": "BUILDER",
      "review_status": "approved",
      "issues": []
    },
    {
      "path": "tui_game/data/enemies.json",
      "status": "in_progress",
      "last_agent": "BUILDER",
      "review_status": "approved",
      "issues": []
    },
    {
      "path": "tui_game/utils/__init__.py",
      "status": "in_progress",
      "last_agent": "BUILDER",
      "review_status": "approved",
      "issues": []
    },
    {
      "path": "tui_game/utils/logger.py",
      "status": "in_progress",
      "last_agent": "BUILDER",
      "review_status": "approved",
      "issues": []
    }
  ],
  "decisions": [
    "Goal: TUI-based Python game",
    "Use Python",
    "Platform: TUI (Text User Interface)",
    "Core mechanic: Manage a team of 5 heroes",
    "Core mechanic: Equipping heroes",
    "Core mechanic: Short battles",
    "Core mechanic: Progression system tied to improving a base",
    "Architecture: Modular (Core, TUI, Game Logic)",
    "TUI Framework Suggestion: 'textual'"
  ],
  "completion_status": {
    "architecture": "done",
    "implementation": "in_progress",
    "review": "not_started",
    "documentation": "not_started"
  },
  "next_step": {
    "agent": "BUILDER",
    "task": "Implement 'Load Game' and 'Start New Game' logic in the main menu. 1. Modify `tui_game/tui/screens/main_menu.py`: Implement handlers for `btn_load_game` and `btn_new_game` in `on_button_pressed`. 2. For `btn_load_game`, call `self.app.controller.load_game()`. 3. For `btn_new_game`, call a new method `self.app.controller.new_game()` (add a stub for this in `game_controller.py` if needed). 4. After both actions, push the `BaseScreen` using `self.app.push_screen(BaseScreen())`."
  }
}
```

=============================================================================================================================================================================================

Hallo, hier ist der BUILDER.

Meine Aufgabe ist es, die Logik fÃ¼r "Load Game" und "Start New Game" im HauptmenÃ¼ zu implementieren. Dies erfordert Ã„nderungen in `main_menu.py` und das HinzufÃ¼gen einer Stub-Methode in `game_controller.py`. Ich beginne mit `main_menu.py`.

UPDATE: `tui_game/tui/screens/main_menu.py`

```python
"""
main_menu.py

Implements the Textual Screen for the main menu.
This is the initial screen the player sees, providing options
to start, load, or quit the game.
"""

from textual.screen import Screen
from textual.widgets import Header, Footer, Static, Button
from textual.containers import Vertical
from textual.app import ComposeResult

# Import other screens to switch to
from tui.screens.hero_screen import HeroScreen
from tui.screens.base_screen import BaseScreen
from tui.screens.battle_screen import BattleScreen

class MainMenuScreen(Screen):
    """
    The main menu and starting screen for the game.
    """

    def compose(self) -> ComposeResult:
        """
         Create the child widgets for the main menu.
        """
        yield Header(name="Main Menu")

        with Vertical(id="menu_options"):
            yield Static("TUI RPG GAME (Title Stub)", id="title")
            yield Button("Start New Game", id="btn_new_game")
            yield Button("Load Game", id="btn_load_game")

            # --- Quick navigation buttons for development ---
            yield Button("Go to Base (Dev)", id="btn_goto_base")
            yield Button("Go to Heroes (Dev)", id="btn_goto_heroes")
            yield Button("Go to Battle (Dev)", id="btn_goto_battle")
            # --- End Dev Buttons ---

            yield Button("Quit", id="btn_quit")

        yield Footer()

    def on_button_pressed(self, event: Button.Pressed) -> None:
        """
        Handle button press events on the main menu.
        """
        if event.button.id == "btn_new_game":
            # print("Stub: 'New Game' pressed.")
            # Future: Call controller to initialize a new game state
            self.app.controller.new_game() # Call controller
            self.app.push_screen(BaseScreen()) # e.g., go to base

        elif event.button.id == "btn_load_game":
            # print("Stub: 'Load Game' pressed.")
            # Future: Call controller to load game state
            self.app.controller.load_game() # Call controller
            self.app.push_screen(BaseScreen()) # e.g., go to base

        elif event.button.id == "btn_goto_base":
            # print("Stub: 'Go to Base' pressed.")
            self.app.push_screen(BaseScreen())

        elif event.button.id == "btn_goto_heroes":
            # print("Stub: 'Go to Heroes' pressed.")
            self.app.push_screen(HeroScreen())

        elif event.button.id == "btn_goto_battle":
             # print("Stub: 'Go to Battle' pressed.")
             self.app.push_screen(BattleScreen())

        elif event.button.id == "btn_quit":
            # print("Stub: 'Quit' pressed.")
            self.app.exit()
```

## SELF-REVIEW

1.  **Logic:** ðŸŸ¢ Die Handler fÃ¼r `btn_new_game` und `btn_load_game` rufen jetzt die entsprechenden Methoden auf `self.app.controller` auf (`new_game` und `load_game`). Nach beiden Aktionen wird der `BaseScreen` mit `self.app.push_screen(BaseScreen())` geladen, wie gefordert. Die Platzhalter-Prints wurden entfernt/auskommentiert.
2.  **Security:** ðŸŸ¢ Keine Sicherheitsbedenken.
3.  **Style:** ðŸŸ¢ Sauber, folgt PEP8. Kommentare sind auf Englisch.

### REVIEW SUMMARY

```json
{
  "status": "CLEAN",
  "file_implemented": "tui_game/tui/screens/main_menu.py",
  "findings": []
}
```

-----

```json
{
  "agent": "BUILDER",
  "version": "v0.6",
  "files": [
    {
      "path": "architecture.md",
      "status": "final",
      "last_agent": "DESIGN",
      "review_status": "approved",
      "issues": []
    },
    {
      "path": "tui_game/main.py",
      "status": "final",
      "last_agent": "BUILDER",
      "review_status": "approved",
      "issues": []
    },
    {
      "path": "tui_game/core/__init__.py",
      "status": "in_progress",
      "last_agent": "BUILDER",
      "review_status": "approved",
      "issues": []
    },
    {
      "path": "tui_game/core/game_controller.py",
      "status": "final",
      "last_agent": "BUILDER",
      "review_status": "approved",
      "issues": []
    },
    {
      "path": "tui_game/core/game_state.py",
      "status": "in_progress",
      "last_agent": "BUILDER",
      "review_status": "approved",
      "issues": []
    },
    {
      "path": "tui_game/tui/__init__.py",
      "status": "in_progress",
      "last_agent": "BUILDER",
      "review_status": "approved",
      "issues": []
    },
    {
      "path": "tui_game/tui/app.py",
      "status": "final",
      "last_agent": "BUILDER",
      "review_status": "approved",
      "issues": []
    },
    {
      "path": "tui_game/tui/screens/__init__.py",
      "status": "in_progress",
      "last_agent": "BUILDER",
      "review_status": "approved",
      "issues": []
    },
    {
      "path": "tui_game/tui/screens/base_screen.py",
      "status": "in_progress",
      "last_agent": "BUILDER",
      "review_status": "approved",
      "issues": []
    },
    {
      "path": "tui_game/tui/screens/battle_screen.py",
      "status": "in_progress",
      "last_agent": "BUILDER",
      "review_status": "approved",
      "issues": []
    },
    {
      "path": "tui_game/tui/screens/hero_screen.py",
      "status": "in_progress",
      "last_agent": "BUILDER",
      "review_status": "approved",
      "issues": []
    },
    {
      "path": "tui_game/tui/screens/main_menu.py",
      "status": "awaiting_review",
      "last_agent": "BUILDER",
      "review_status": "CLEAN",
      "issues": []
    },
    {
      "path": "tui_game/game_logic/__init__.py",
      "status": "in_progress",
      "last_agent": "BUILDER",
      "review_status": "approved",
      "issues": []
    },
    {
      "path": "tui_game/game_logic/base_manager.py",
      "status": "in_progress",
      "last_agent": "BUILDER",
      "review_status": "approved",
      "issues": []
    },
    {
      "path": "tui_game/game_logic/battle_system.py",
      "status": "in_progress",
      "last_agent": "BUILDER",
      "review_status": "approved",
      "issues": []
    },
    {
      "path": "tui_game/game_logic/hero_manager.py",
      "status": "in_progress",
      "last_agent": "BUILDER",
      "review_status": "approved",
      "issues": []
    },
    {
      "path": "tui_game/game_logic/item_manager.py",
      "status": "in_progress",
      "last_agent": "BUILDER",
      "review_status": "approved",
      "issues": []
    },
    {
      "path": "tui_game/data/items.json",
      "status": "in_progress",
      "last_agent": "BUILDER",
      "review_status": "approved",
      "issues": []
    },
    {
      "path": "tui_game/data/heroes.json",
      "status": "in_progress",
      "last_agent": "BUILDER",
      "review_status": "approved",
      "issues": []
    },
    {
      "path": "tui_game/data/enemies.json",
      "status": "in_progress",
      "last_agent": "BUILDER",
      "review_status": "approved",
      "issues": []
    },
    {
      "path": "tui_game/utils/__init__.py",
      "status": "in_progress",
      "last_agent": "BUILDER",
      "review_status": "approved",
      "issues": []
    },
    {
      "path": "tui_game/utils/logger.py",
      "status": "in_progress",
      "last_agent": "BUILDER",
      "review_status": "approved",
      "issues": []
    }
  ],
  "decisions": [
    "Goal: TUI-based Python game",
    "Use Python",
    "Platform: TUI (Text User Interface)",
    "Core mechanic: Manage a team of 5 heroes",
    "Core mechanic: Equipping heroes",
    "Core mechanic: Short battles",
    "Core mechanic: Progression system tied to improving a base",
    "Architecture: Modular (Core, TUI, Game Logic)",
    "TUI Framework Suggestion: 'textual'"
  ],
  "completion_status": {
    "architecture": "done",
    "implementation": "in_progress",
    "review": "not_started",
    "documentation": "not_started"
  },
  "next_step": {
    "agent": "BUILDER",
    "task": "Implement 'Load Game' and 'Start New Game' logic (Part 2): Add a stub method `new_game(self)` to `tui_game/core/game_controller.py`."
  }
}
```

=============================================================================================================================================================================================

Hallo, hier ist der BUILDER.

Ich schlieÃŸe den zweiten Teil der Aufgabe ab: HinzufÃ¼gen der Stub-Methode `new_game(self)` zur Klasse `GameController` in `tui_game/core/game_controller.py`.

UPDATE: `tui_game/core/game_controller.py`

```python
"""
game_controller.py

The main "conductor" of the game.
Manages game state transitions and coordinates between the TUI
and the game logic modules.
"""

# Import necessary modules (once they are created)
from core.game_state import GameState
# from game_logic import hero_manager, item_manager, battle_system, base_manager
from typing import Any # Using 'Any' for stubs

class GameController:
    """
    Manages the game's core state and logic flow.
    """
    def __init__(self):
        # The game_state will hold all persistent data (heroes, inventory, base)
        self.game_state: GameState = GameState()
        # self.game_state: Any = None # Placeholder

        # The controller will also manage the current high-level game state
        # e.g., "MAIN_MENU", "BATTLE", "BASE_MANAGEMENT"
        self.current_screen: str = "MAIN_MENU"

        print("GameController initialized.")

    def new_game(self):
        """
        Initializes a new game state.
        (Called from MainMenuScreen)
        """
        # --- Future Logic ---
        # 1. Create a fresh GameState object
        # self.game_state = GameState()
        # 2. Add starting heroes, items, etc.
        # self.game_state.heroes.append({"id": "hero_0", "name": "Starter Hero", ...})
        # self.game_state.inventory["health_potion"] = 3
        print("Stub: Initializing new game state...")
        # For now, just re-initialize the existing stub GameState
        self.game_state = GameState()


    def load_game(self):
        """
        Loads the game state from a file.
        (Responsibility might be in game_state.py, but controller triggers it)
        """
        # Re-initialize GameState before loading in case there was old data
        self.game_state = GameState()
        self.game_state.load_state()
        print("Stub: Loading game state...")

    def save_game(self):
        """
        Saves the current game state to a file.
        """
        self.game_state.save_state()
        print("Stub: Saving game state...")

    def switch_screen(self, new_screen: str):
        """
        Handles the logic for switching between major UI screens.
        (e.g., from 'BASE' to 'BATTLE')
        """
        self.current_screen = new_screen
        print(f"Stub: Switching screen to {new_screen}")

    def equip_item(self, hero_id: Any, item_id: Any):
        """
        Coordinates the logic for equipping an item to a hero.
        (Based on architecture.md data flow example)
        """
        print(f"Stub: Attempting to equip item {item_id} on hero {hero_id}...")
        # --- Future Logic ---
        # 1. Get game_state
        state = self.game_state
        # 2. Call logic module
        # success = item_manager.apply_item(state, hero_id, item_id)
        # 3. Handle result
        # if success:
        #     print("Item equipped.")
        # else:
        #     print("Failed to equip item.")
        # 4. (TUI will be notified via event or state watch)
        pass

# This file defines the class. It won't be run directly.
```

## SELF-REVIEW

1.  **Logic:** ðŸŸ¢ Eine neue Methode `new_game(self)` wurde zur `GameController`-Klasse hinzugefÃ¼gt. Sie enthÃ¤lt einen Platzhalter-Print und kommentierte Hinweise zur zukÃ¼nftigen Logik (Erstellung eines neuen `GameState`, HinzufÃ¼gen von Startdaten). Der Stub initialisiert vorerst einfach den `game_state` neu. Die `load_game`-Methode wurde ebenfalls leicht angepasst, um `game_state` vor dem Laden neu zu initialisieren, was eine gute Praxis ist.
2.  **Security:** ðŸŸ¢ Keine Sicherheitsbedenken.
3.  **Style:** ðŸŸ¢ Sauber, folgt PEP8. Kommentare und Docstring sind auf Englisch.

### REVIEW SUMMARY

```json
{
  "status": "CLEAN",
  "file_implemented": "tui_game/core/game_controller.py",
  "findings": []
}
```

-----

```json
{
  "agent": "BUILDER",
  "version": "v0.6",
  "files": [
    {
      "path": "architecture.md",
      "status": "final",
      "last_agent": "DESIGN",
      "review_status": "approved",
      "issues": []
    },
    {
      "path": "tui_game/main.py",
      "status": "final",
      "last_agent": "BUILDER",
      "review_status": "approved",
      "issues": []
    },
    {
      "path": "tui_game/core/__init__.py",
      "status": "in_progress",
      "last_agent": "BUILDER",
      "review_status": "approved",
      "issues": []
    },
    {
      "path": "tui_game/core/game_controller.py",
      "status": "awaiting_review",
      "last_agent": "BUILDER",
      "review_status": "CLEAN",
      "issues": []
    },
    {
      "path": "tui_game/core/game_state.py",
      "status": "in_progress",
      "last_agent": "BUILDER",
      "review_status": "approved",
      "issues": []
    },
    {
      "path": "tui_game/tui/__init__.py",
      "status": "in_progress",
      "last_agent": "BUILDER",
      "review_status": "approved",
      "issues": []
    },
    {
      "path": "tui_game/tui/app.py",
      "status": "final",
      "last_agent": "BUILDER",
      "review_status": "approved",
      "issues": []
    },
    {
      "path": "tui_game/tui/screens/__init__.py",
      "status": "in_progress",
      "last_agent": "BUILDER",
      "review_status": "approved",
      "issues": []
    },
    {
      "path": "tui_game/tui/screens/base_screen.py",
      "status": "in_progress",
      "last_agent": "BUILDER",
      "review_status": "approved",
      "issues": []
    },
    {
      "path": "tui_game/tui/screens/battle_screen.py",
      "status": "in_progress",
      "last_agent": "BUILDER",
      "review_status": "approved",
      "issues": []
    },
    {
      "path": "tui_game/tui/screens/hero_screen.py",
      "status": "in_progress",
      "last_agent": "BUILDER",
      "review_status": "approved",
      "issues": []
    },
    {
      "path": "tui_game/tui/screens/main_menu.py",
      "status": "final",
      "last_agent": "BUILDER",
      "review_status": "approved",
      "issues": []
    },
    {
      "path": "tui_game/game_logic/__init__.py",
      "status": "in_progress",
      "last_agent": "BUILDER",
      "review_status": "approved",
      "issues": []
    },
    {
      "path": "tui_game/game_logic/base_manager.py",
      "status": "in_progress",
      "last_agent": "BUILDER",
      "review_status": "approved",
      "issues": []
    },
    {
      "path": "tui_game/game_logic/battle_system.py",
      "status": "in_progress",
      "last_agent": "BUILDER",
      "review_status": "approved",
      "issues": []
    },
    {
      "path": "tui_game/game_logic/hero_manager.py",
      "status": "in_progress",
      "last_agent": "BUILDER",
      "review_status": "approved",
      "issues": []
    },
    {
      "path": "tui_game/game_logic/item_manager.py",
      "status": "in_progress",
      "last_agent": "BUILDER",
      "review_status": "approved",
      "issues": []
    },
    {
      "path": "tui_game/data/items.json",
      "status": "in_progress",
      "last_agent": "BUILDER",
      "review_status": "approved",
      "issues": []
    },
    {
      "path": "tui_game/data/heroes.json",
      "status": "in_progress",
      "last_agent": "BUILDER",
      "review_status": "approved",
      "issues": []
    },
    {
      "path": "tui_game/data/enemies.json",
      "status": "in_progress",
      "last_agent": "BUILDER",
      "review_status": "approved",
      "issues": []
    },
    {
      "path": "tui_game/utils/__init__.py",
      "status": "in_progress",
      "last_agent": "BUILDER",
      "review_status": "approved",
      "issues": []
    },
    {
      "path": "tui_game/utils/logger.py",
      "status": "in_progress",
      "last_agent": "BUILDER",
      "review_status": "approved",
      "issues": []
    }
  ],
  "decisions": [
    "Goal: TUI-based Python game",
    "Use Python",
    "Platform: TUI (Text User Interface)",
    "Core mechanic: Manage a team of 5 heroes",
    "Core mechanic: Equipping heroes",
    "Core mechanic: Short battles",
    "Core mechanic: Progression system tied to improving a base",
    "Architecture: Modular (Core, TUI, Game Logic)",
    "TUI Framework Suggestion: 'textual'"
  ],
  "completion_status": {
    "architecture": "done",
    "implementation": "in_progress",
    "review": "not_started",
    "documentation": "not_started"
  },
  "next_step": {
    "agent": "META",
    "task": "The 'Start New Game' and 'Load Game' buttons in the main menu now call controller methods. Review the changes and define the next step, likely implementing the actual loading/saving logic in `game_state.py` or the `new_game` logic."
  }
}
```

=============================================================================================================================================================================================



=============================================================================================================================================================================================



=============================================================================================================================================================================================



=============================================================================================================================================================================================



=============================================================================================================================================================================================



=============================================================================================================================================================================================



=============================================================================================================================================================================================



=============================================================================================================================================================================================



=============================================================================================================================================================================================



=============================================================================================================================================================================================



=============================================================================================================================================================================================



=============================================================================================================================================================================================



=============================================================================================================================================================================================



=============================================================================================================================================================================================



=============================================================================================================================================================================================



=============================================================================================================================================================================================



=============================================================================================================================================================================================



=============================================================================================================================================================================================



=============================================================================================================================================================================================



=============================================================================================================================================================================================



=============================================================================================================================================================================================



=============================================================================================================================================================================================



=============================================================================================================================================================================================



=============================================================================================================================================================================================



=============================================================================================================================================================================================



=============================================================================================================================================================================================



=============================================================================================================================================================================================



=============================================================================================================================================================================================



=============================================================================================================================================================================================



=============================================================================================================================================================================================



=============================================================================================================================================================================================



=============================================================================================================================================================================================



=============================================================================================================================================================================================



=============================================================================================================================================================================================



=============================================================================================================================================================================================



=============================================================================================================================================================================================



=============================================================================================================================================================================================



=============================================================================================================================================================================================



=============================================================================================================================================================================================



=============================================================================================================================================================================================



=============================================================================================================================================================================================



=============================================================================================================================================================================================



=============================================================================================================================================================================================



=============================================================================================================================================================================================



=============================================================================================================================================================================================



=============================================================================================================================================================================================



=============================================================================================================================================================================================